<header id="page-head">
    <div id="logo-containers">
        <img src="/images/output-onlinepngtools (5).png" alt="logo" class="logo-img">
        <h1>CRYPTOCOIN</h1>
    </div>

    <a href="/logout" id="login-btn"> Log out</a>
</header>
<main>
    <nav>
        <a href="/home" class="nav-link"> <img src="/images/home-out.png" class="nav-icon"></a>
        <a href="/transactions" class="nav-link"> <img src="/images/bank-out.png" class="nav-icon"></a>
        <a href="/charts"class="nav-link"> <img src="/images/charts.png" class="nav-icon"></a>
    </nav>


    <div id="chart-btn-container">
        
        <a href="/charts/coins">Coins</a>
    </div>

   <section id="transaction-container">



        {{#if final}}
       


        <div id="canvas-container">

            <canvas id="myChart" width="1300" height="540"></canvas>
        </div>


    

        <script> 
            //<---------------------------DEFINING CHART PARAMETERS IN THIS SCRIPT------------------------->
            
                var ctx = document.getElementById('myChart');

                var averages = [];
                var dates = [];

                {{#each final}}
                    var avg = "{{this.[1]}}";
                    averages.push(avg);
                    var date = "{{this.[0]}}";
                    dates.push(date);
                {{/each}}
                
                let total=[parseInt(averages[0])]
                console.log(total)
                for(let i =1; i < averages.length; i++){
                    console.log("aqui!")
                    total.push(total[i-1]+ parseInt(averages[i]))}

            
                
                  var options = {
                    legend: false,
                    responsive:true,
                    maintainAspectRatio:true,
                    cubicInterpolationMode:"default",
                    scales: {
                        yAxes: [{
                            display: true,
                            ticks: {
                                beginAtZero: true,
                                stepSize:10,
                                suggestedMax:100
                            }
                        }]
                    },
                    animation: true
                };
                var myBarChart = new Chart(ctx, {
                  data: {
                    datasets: [{
                    type: 'line',
                    label: 'balance of the day',
                    data: averages,
                    backgroundColor: 'rgba(245, 200, 66, 0.2)',
                    borderColor:'rgb(245, 200, 66)',
                    borderWidth:2
                }, {
                    type: 'bar',
                    label: 'total of the day',
                    data: total,
                    backgroundColor: 'rgba(34, 177, 76, 0.2)',
                    borderColor:'rgb(34, 177, 76)',
                    borderWidth:1,
                }],
        labels: dates
    },
    options: options
                });

            </script>
        {{/if}}

   </section>